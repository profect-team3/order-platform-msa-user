plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'goorm.delivery'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

ext {
    querydslVersion = '5.0.0'
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    // core
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // db
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation files('libs/msa-common-security-1.0.7-plain.jar')
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    // cloud
    implementation platform("org.springframework.cloud:spring-cloud-dependencies:${rootProject.ext.springCloudVersion}")
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // docs
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    testRuntimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.security:spring-security-test'
}

clean {
    delete file('src/main/generated')
}


tasks.named('test') {
    useJUnitPlatform()
}